version: '3.8'

services:
  frontend:
    build: ./numa-reporteador-frontend
    ports:
      - "80:80"
    environment:
      VITE_BACKEND_URL: http://34.71.107.222:3000/api
    depends_on:
    - backend
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost"]
      interval: 30s
      timeout: 10s
      retries: 3
  backend:
    build: ./numa-reporteador-backend
    ports:
      - "3000:3000"
    environment:
      DATABASE_URL: postgresql://postgres:admin123@postgres:5432/numadb?schema=public&connection_limit=5&pool_timeout=2&query_timeout=5000
      FRONTEND_URL: http://34.71.107.222
      JWT_SECRET: 3x@mpl3$3cur3JWTs3cr3t!1234567890abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ
      PORT: 3000
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  postgres:
    container_name: numa-db
    image: postgres:16.3
    environment:
      POSTGRES_MAX_CONNECTIONS: "200"
      POSTGRES_SUPERUSER_RESERVED_CONNECTIONS: "5"
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "admin123"
      POSTGRES_DB: "postgres"
    command: >-
      postgres
      -c max_connections=100
      -c shared_buffers=1GB
      -c work_mem=16MB
      -c idle_in_transaction_session_timeout=60s
      -c statement_timeout=10s
      -c superuser_reserved_connections=5
      -c maintenance_work_mem=64MB
    restart: always
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - app-network
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres-data:

networks:
  app-network:
    driver: bridge